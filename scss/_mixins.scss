//********************************************************************************************************************//
// border definitions
//********************************************************************************************************************//
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  -o-border-radius: $radius;
  border-radius: $radius;
}

//********************************************************************************************************************//
// shadow definitions
//********************************************************************************************************************//
//:null bedeutet optionale Parameter; beispielsweise kann so auch "none" Ã¼bergeben werden
@mixin box-shadow($x:null, $y:null, $spread:null, $color:null) {
  -webkit-box-shadow: $x $y $spread $color;
  -moz-box-shadow: $x $y $spread $color;
  -ms-box-shadow: $x $y $spread $color;
  -o-box-shadow: $x $y $spread $color;
  box-shadow: $x $y $spread $color;
}

@mixin box-shadow-fieldset($x, $y, $spread, $color, $inset) {
  -webkit-box-shadow: $x $y $spread $color $inset;
  -moz-box-shadow: $x $y $spread $color $inset;
  -ms-box-shadow: $x $y $spread $color $inset;
  -o-box-shadow: $x $y $spread $color $inset;
  box-shadow: $x $y $spread $color $inset;
}

//********************************************************************************************************************//
// color definitions
//********************************************************************************************************************//
@mixin colors($color1, $color2) {
  background-color: $color1;
  color: $color2;
}

//********************************************************************************************************************//
//colorgradient//
//********************************************************************************************************************//
@mixin linearGradient($top, $bottom) {
  background: $top; // Old browsers
  background: -moz-linear-gradient(top, $top 0%, $bottom 100%); // FF3.6+
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $top), color-stop(100%, $bottom)); // Chrome,Safari4+
  background: -webkit-linear-gradient(top, $top 0%, $bottom 100%); // Chrome10+,Safari5.1+
  background: -o-linear-gradient(top, $top 0%, $bottom 100%); // Opera 11.10+
  background: -ms-linear-gradient(top, $top 0%, $bottom 100%); // IE10+
  background: linear-gradient(to bottom, $top 0%, $bottom 100%); // W3C
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffff', endColorstr='#394a59', GradientType=0); // IE6-9
}

//********************************************************************************************************************//
// Media Queries for Backend
//********************************************************************************************************************//

// add rule @media with passed parameters for breakpoints.
// Possible arguments ($point) are stored as variables ($mq-phone, $mq-tablet)
// @content: rules after this mixin call will be positioned within these media queries
//********************************************************************************************************************//
@mixin breakpoint($point) {
  @if $point == $mq-phone {
    @media (max-width: $point) {
      @content;
    }
  } @else if $point == $mq-tablet {
    @media (min-width: $mq-phone) and (max-width: $point) {
      @content;
    }
  }
}

// hide all columns and display just the chosen ones.
// If just one column-number is passed, then the padding is added to this column for the left- and right-side
// If two column-number are passed, then padding-left is added to the first chosen column
//********************************************************************************************************************//
@mixin displayAndHideColumns($columns...) {
  thead th, tbody td {
    display: none;
    @each $declaration in $columns {
      &:nth-child(#{$declaration}) {
        display: table-cell;
      }
    }

    @if length($columns) == 1 {
      &:nth-child(#{$columns}) {
        padding-left: 20px;
        padding-right: 20px;
      }
    }
    @if length($columns) == 2 {
      &:nth-child(#{nth($columns,1)}) {
        padding-left: 8px;
      }
    }
  }
}

//hide a column and all columns coming after this
//********************************************************************************************************************//
@mixin hideColumns($column) {
  thead th, tbody td {
    &:nth-child(n+#{$column}) {
      display: none;
    }
  }
}